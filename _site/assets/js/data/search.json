[
  
  {
    "title": "Five things I wish I would of learned sooner in Powershell",
    "url": "/posts/Five-Things-Powershell/",
    "categories": "Powershell",
    "tags": "",
    "date": "2022-08-31 12:03:31 -0700",
    





    "snippet": "  Snacking with Penny :baby:  Using Parentheses  Customizing user profile  Alias shortcuts to improve productivity  Using the help file  Using Get Member  Creating reusable tools  Error handling  Passing objects through the piple Byvalue and Byproperty  PScustomobject  Hash Tables (Nested too?)  Arrays  Errors and Exception handling  SwitchUsing ParenthesesUsing parentheses can be helpful in numerous situations, for example have you ever ran something similar to this?$Computers = Get-Content 'C:\\Computerlist.txt'Restart-Computer -Computername $Computers# We can acheive the same results by using parenthesesRestart-Computer -Computername (Get-Content 'C:\\Computerlist.txt')By including the parentheses you are telling Powershell to load the content surrounded by them first, by the time Restart-Computer goes to read the data from the -Computername parameter all of the machine names have already been loaded. Here is an example I run whenever I want to inspect Just the parameters of the command(Get-command Get-Process).ParametersHere is another example I use quite often when want to involve thresholds of time or a specific date.# Using a variable$Date = Get-Date$Date.AddDays(-365)# Using parenthesis(Get-date).AddDays(-365)Here is a real use case scenario with the previous example# Real Use case scenarioGet-WinEvent -logName 'system' | Where {$_.Timecreated -gt (get-date).AddDays(-1)}Wrapping the parenthesis around Get-Date allows me to access the method straight away. My best advice would be to try some combinations out yourself, you would be surprised to find out what you can achieve with less code. In the long run this not only makes your code easier to read and write but also debug."
  },
  
  {
    "title": "My First Blog Post",
    "url": "/posts/First-Post/",
    "categories": "Powershell",
    "tags": "",
    "date": "2022-08-31 12:03:31 -0700",
    





    "snippet": "I would like to start this post off by introducing myself, my name is Tanner and Iâ€™m a father and Powershell enthusiast. My passion for both of these things in my life is what leadme to use the name PoshDad. My goal for this blog is to create a library full of helpful resources not only for myself but the tech community as a whole. I also want to show the relatable struggles of learning and the joy of self improvement. I hope you join me on this journey and I also hope these articles bring true value to your career.Thanks for reading,PoshDad"
  }
  
]

